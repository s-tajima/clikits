#!/usr/bin/env ruby

$: << File.expand_path('../../lib', __FILE__)
require 'awskits'
require 'json'

profile    = ARGV.shift
token_code = ARGV.shift

factory = AWSKits::Factory.new(profile, token_code)

s3 = factory.client("S3")
iam = factory.client("IAM")
sts = factory.client("STS")

res_alias = iam.list_account_aliases()
res_caller = sts.get_caller_identity()

buckets = s3.list_buckets.buckets

buckets.each do |bucket|
  begin
    res = s3.get_object_lock_configuration({ bucket: bucket.name })
    object_lock_enabled = res.object_lock_configuration.object_lock_enabled

    unless res.object_lock_configuration.rule.nil?
      mode = res.object_lock_configuration.rule.default_retention.mode
      days = res.object_lock_configuration.rule.default_retention.days
      years = res.object_lock_configuration.rule.default_retention.years
    end 
  rescue Aws::S3::Errors::ObjectLockConfigurationNotFoundError => ex
    object_lock_enabled = 'DISABLED'
    mode = "-"
    days = "-"
    years = "-"
  rescue Aws::S3::Errors::PermanentRedirect => ex
    object_lock_enabled = 'FAILED'
    mode = "-"
    days = "-"
    years = "-"
  rescue => ex
    pp res
  end

  puts "#{res_alias.account_aliases[0]}\t#{res_caller.account}\t#{bucket.name}\t#{object_lock_enabled}\t#{mode}\t#{years}\t#{days}\n"
end
